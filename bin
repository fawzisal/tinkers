#!/bin/bash
#
# bin:   Count number of word occurances.
#				!important: Data is pasted from the clipboard.
# 
# REQUIREMENTS: xsv, gsed, perl
# 

b_common=""
b_num=""
help_string="
$bold bin$blank: Count number of word occurances.

$yellow USAGE: $blank
    $bold bin $blank [flags/options] [filename]

$yellow FLAGS: $blank
    $green -n   $blank remove number-containing words.
    $green -c   $blank remove common words.
    $green -i   $blank case-insensitive (warning: converts all to lower case).
    $green -h   $blank show list of command-line options.

$yellow
OPTIONS: $blank
    $green -C [file]   $blank remove common words in custom list.

"

while getopts 'hnc-:C:' opt; do
    case "${opt}" in
    c) b_common="1";;
    C) b_COMMON="1"; v_COMMON="$OPTARG";;
    n) b_num="1";;
    h|\?) printf "$help_string"; b_help="help"; exit 1;;
    -) if [[ $OPTARG == "help" ]]; then printf "$help_string"; b_help="help"; exit 1; fi; ;;
    *) echo "Unknown flag $OPTARG."; exit 1;;
  esac
done

n0=0
n=1
i=0

str=$(cat |
	tr -sc '[A-z0-9\n]' '\n' |
	sed 's/$/,/' |
	sort |
	xsv frequency -nl0 |
	xsv select 2,3);


str_clean="$(printf "$str")"

if [[ ! -z "$b_common" ]]; then {
    datadir="$DATAPATH"
    if [[ -z "$datadir" ]]; then datadir=$(pwd); fi
    mcf="$datadir/common_words.txt"
    most_common=$(cat $mcf | tr -s '\n' '|' | gsed 's/|/\\|/g')
    str_clean=$(printf "$str_clean" |
                gsed "s/^\(${most_common::${#most_common}-1}}\),.*$//i");
}; fi

if [[ ! -z "$b_COMMON" ]]; then {
    most_common=$(cat "$v_COMMON" | tr -s '\n' '|' | gsed 's/|/\\|/g')
    str_clean=$(printf "$str_clean" |
                gsed "s/^\(${most_common::${#most_common}-1}}\),.*$//i");
}; fi

if [[ ! -z "$b_num" ]]; then {
    str_clean=$(printf "$str_clean" |
                perl -pe "s/^\d*,\d*$//gi" |
                perl -pe "s/^\w*\d\w*,\d*$//i");
}; fi

str_clean=$(echo -e "$str_clean" | perl -0777 -pe 's/^\n//gm')
echo -e "$str_clean"
