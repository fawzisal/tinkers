#!/bin/bash
#
# bin_old:   Count number of word occurances.
#				!important: Data is pasted from the clipboard.
# 
# REQUIREMENTS: sed
# 

v_FILE="";
help_string="
$bold bin_old$blank: Count number of word occurances.

$yellow USAGE: $blank
    $bold bin_old $blank [flags/options] [filename]

$yellow FLAGS: $blank
    $green -c   $blank .
    $green -h   $blank show list of command-line options.

$yellow
OPTIONS: $blank
    $green -f [file]   $blank use file as input.

"

while getopts 'h-:f:' opt; do
    case "${opt}" in
    f) v_FILE="$OPTARG";;
    h|\?) printf "$help_string"; b_help="help"; exit 1;;
    -) if [[ $OPTARG == "help" ]]; then printf "$help_string"; b_help="help"; exit 1; fi; ;;
    *) echo "Unknown flag $OPTARG."; exit 1;;
  esac
done

n0=0
n=1
i=0

if [[ -z "$v_FILE" ]]; then {
	related="$(< /dev/stdin)";
	str=$(echo -e "$related" | tr -sc '[A-z0-9\n]' '\n' | sed 's/$/,/' | sort);
	datadir="$DATAPATH"
	if [[ -z "$datadir" ]]; then datadir=$(pwd); fi
	mcf="$datadir/common_words.txt"
	most_common=$(cat $mcf | tr -s '\n' '|' | sed 's/|/\\|/g')

	while [[ ! n0 -eq n ]] && [[ i -lt 20 ]]; do { 
		i=$[ i + 1 ];
		n0=$(echo "$str" | wc -l);
		str=$(echo "$str" | perl -0777 -pe 's/^([^\n\t\+]+)(\+*)\n\1/\1\2+/gm');
		n=$(echo "$str" | wc -l);
		echo "z1: $n0/$n";
	}; done
	# echo "$str" | sed "s/^\(${most_common::${#most_common}-1}\),.*$//i"
	echo "$str" |
		sed "s/^\(${most_common::${#most_common}-1}}\),.*$//i" |
		sort |
		uniq;
}; else {
	suffix="";
	cp "$v_FILE" "$v_FILE$suffix";
	while [[ ! n0 -eq n ]] && [[ i -lt 20 ]]; do { 
		i=$[ i + 1 ];
		n0=$(wc -l "$v_FILE$suffix" | tr -s ' ' | cut -d ' ' -f2);
		perl -i.bk -0777 -pe 's/^([^\n\t\+]+)(\+*)\n\1/\1\2+/gm' "$v_FILE$suffix";
		n=$(wc -l "$v_FILE$suffix" | tr -s ' ' | cut -d ' ' -f2);
		echo "z0: $n0/$n";
	}; done
}; fi

