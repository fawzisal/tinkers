#!/bin/bash
#
# bin:   Create a histogram of non-common words in a string input.
#				!important: Data is pasted from the clipboard.
# 
# REQUIREMENTS: sed
# 

help_string="
$bold bin_old$blank: Create a histogram of non-common words in a string input.

$yellow USAGE: $blank
    $bold bin_old $blank [flags/options] [filename]

$yellow FLAGS: $blank
    $green -c   $blank .
    $green -h   $blank show list of command-line options.
"

while getopts 'h-:' opt; do
    case "${opt}" in
    h|\?) printf "$help_string"; b_help="help"; exit 1;;
    -) if [[ $OPTARG == "help" ]]; then printf "$help_string"; b_help="help"; exit 1; fi; ;;
    *) echo "Unknown flag $OPTARG."; exit 1;;
  esac
done

related="$(< /dev/stdin)";

n0=0
n=1
i=0
str=$(echo -e "$related" | tr -sc '[A-z0-9\n]' '\n' | sed 's/$/,/' | sort);
datadir="$DATAPATH"
if [[ -z "$datadir" ]]; then datadir=$(pwd); fi
mcf="$datadir/common_words.txt"
most_common=$(cat $mcf | tr -s '\n' '|' | sed 's/|/\\|/g')

while [[ ! n0 -eq n ]] && [[ i -lt 20 ]]; do { 
	i=$[ i + 1 ];
	n0=$(echo "$str" | wc -l);
	str=$(echo "$str" | perl -0777 -pe 's/^([^\n\t\+]+)(\+*)\n\1/\1\2+/gm');
	n=$(echo "$str" | wc -l);
	# echo "$n0/$n";
}; done

# echo "$str" | sed "s/^\(${most_common::${#most_common}-1}\),.*$//i"
echo "$str" |
	sed "s/^\(${most_common::${#most_common}-1}}\),.*$//i" |
	sort |
	uniq;

