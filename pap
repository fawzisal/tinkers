#!/bin/bash
#
# pap:  tag file with data from doi
# 
# REQUIREMENTS: ?
# 

q="$BASH_ARGV";
debug=0;
help_string="
$bold pap$blank: Tag [file] with data from Crossref using [doi]

$yellow USAGE: $blank
    $bold pap $blank -f [file] -i [doi]

$yellow FLAGS: $blank
	$green
    $green -h   $blank show list of pap-line options.
$yellow
OPTIONS: $blank
    $green -f [fileName]  $blank filename to write tags to.
    $green -i [doi]      $blank doi to use.

"

while getopts 'h-:f:i:' opt; do
    case "${opt}" in
		d) debug=1;;
		f) filename="$OPTARG";;
		i) doi="$OPTARG";;
	    h|\?) printf "$help_string"; b_help="help"; exit 1;;
	    -) if [[ $OPTARG == "help" ]]; then printf "$help_string"; b_help="help"; exit 1; fi; ;;
	    *) echo "Unknown flag $OPTARG."; exit 1;;
	esac
done

if [[ "$debug" == 1 ]]; then {
	echo "debugging";
}; fi

# filename="$q"
# doi="${q[2]}"
echo "filename: $filename"
echo "doi: $doi"
ext=$(echo $filename | grep -o '\.\w\+$' | tr -d '.')
url="http://api.crossref.org/works/$doi"
# echo "url: <$url>";
res=$(curl --user-agent 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)' "$url")
# echo "$res";

# dt=$(echo $res | jq '.items[0].volumeInfo.publishedDate')
# dt="${dt:1:4}"
# author=$(echo $res | jq '.items[0].volumeInfo.authors[0]' | tr -d '"')
# author_lname=$(echo $author | gsed -E 's/^([A-Z])[A-Za-z0-9 \-\.]+ ([A-z]+)$/\2_\1/g' |
# 		gsed -E 's/^([A-Z])[A-Za-z0-9 \-\.]+,[A-Za-z0-9 \-\.]* ([A-z])[A-z]+$/\1_\2/g')
# title=$(echo $res | jq '.items[0].volumeInfo.title' | tr -d '"')
# publisher=$(echo $res | jq '.items[0].volumeInfo.publisher')

dt=$(echo "$res" | jq '.message.created."date-time"?' | tr -d '"' | grep -o '\d\{4\}')
journal=$(echo "$res" | jq '.message."short-container-title"[0]' | tr -d '"')
title=$(echo "$res" | jq '.message.title[0]' | tr -d '"')
publisher=$(echo "$res" | jq '.message.publisher' | tr -d '"')
title_clean=$(echo $title | tr -s ' ' '_' | gsed 's/^[^A-Za-z0-9_]*//' | tr -d '"')
journal_clean=$(echo $journal | tr -s ' ' '_' | gsed 's/^[^A-Za-z0-9_]*//' | tr -d '"')
author=$(echo "$res" | jq '.message.author[0].given' | tr -d '"')
author_lname=$(echo "$res" | jq '.message.author[0].family' | tr -d '"')
author="$author $author_lname"
doi_clean=$(echo "$doi" | tr '/' ':')

# echo "dt: <$dt>";
# echo "journal: <$journal>";
# echo "title: <$title>";
# echo "publisher: <$publisher>";
# echo "title_clean: <$title_clean>";
# echo "author: <$author>";
# echo "author_lname: <$author_lname>";
# echo "author: <$author>";
# echo "doi_clean: <$doi_clean>";

exiftool -DOI="$doi" -Author="$author" -Journal="$journal"\
			-Title="$title" -Date="$dt" -Publisher="$publisher" \
			"$filename";

echo "new filename: $author_lname-$dt-$journal_clean-$title_clean---$doi_clean.$ext"

read -p "Are you sure? " -n 1 -r
# echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
	if [[ ! -z "$author_lname" ]]; then
		p1="$author_lname-"
	fi
	if [[ ! -z "$dt" ]]; then
		p2="$dt-"
	fi
	if [[ ! -z "$journal_clean" ]]; then
		p3="$journal_clean-"
	fi
    # do dangerous stuff
	mv "$filename" "$p1$p2$p3$title_clean---$doi_clean.$ext"
fi

