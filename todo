#!/bin/bash
#
# todo:  print a list of todos.
# 
# REQUIREMENTS: grep,
#				Sublime Text or vim
# 

q="$BASH_ARGV";
debug=0;
b_break="";
b_now="";
b_edit="";
b_editv="";
b_option="";
b_optionv="";
b_list=1;
b_listbig="";
b_add="";
help_string="
$bold command$blank: Lorem ipsum dolor sit amet consectetur adipiscing.

$yellow USAGE: $blank
    $bold command $blank [flags/options] [query]

$yellow FLAGS: $blank
    $green -e   $blank edit using Sublime Text
    $green -E   $blank edit using vim
    $green -b   $blank list break activities
    $green -n   $blank list current task
    $green -l   $blank list current tasks
    $green -L   $blank list all tasks
    $green -o   $blank edit options using Sublime Text
    $green -O   $blank edit options using vim
    $green -h   $blank show list of command-line options.

$yellow
OPTIONS: $blank
    $green -a [task]  $blank add task to todos.

"

while getopts 'deEoOLnablh-:' opt; do
    case "${opt}" in
		a) b_add=1;;
		b) b_break=1;;
		n) b_now=1;;
		e) b_edit=1;;
		E) b_editv=1;;
		o) b_option=1;;
		O) b_optionv=1;;
		l) b_list=1;;
		L) b_listbig=1;;
		d) debug=1;;
	    h|\?) printf "$help_string"; b_help="help"; exit 1;;
	    -) if [[ $OPTARG == "help" ]]; then printf "$help_string"; b_help="help"; exit 1; fi; ;;
	    # *) echo "Unknown flag $OPTARG."; exit 1;;
	    *) b_list=1;;
	esac
done

if [[ "$debug" == 1 ]]; then {
	echo "debugging";
}; fi


if [[ ! -z $b_add ]]; then { echo "$q" >> "$FOCUS_PATH/task_focus.md"; };
elif [[ ! -z $b_edit ]]; then { subl "$FOCUS_PATH/task_focus.md"; };
elif [[ ! -z $b_editv ]]; then { vim "$FOCUS_PATH/task_focus.md"; };
elif [[ ! -z $b_option ]]; then { subl "$FOCUS_PATH/options.md"; };
elif [[ ! -z $b_optionv ]]; then { vim "$FOCUS_PATH/options.md"; };
elif [[ ! -z $b_listbig ]]; then { subl "$FOCUS_PATH/big_list.md"; };
elif [[ ! -z $b_now ]]; then { todo -l | grep ðŸ§¢; };
elif [[ ! -z $b_break ]]; then { todo -l | grep ðŸŽ‰; };
elif [[ ! -z $b_list ]]; then {
	red="\e[0;31m"; green="\e[0;32m"; yellow="\e[0;33m"; blue="\e[0;34m"; magenta="\e[0;35m"; purple="\e[0;36m"; white="\e[0;37m"; grey_light="\e[0;38m"; grey="\e[0;39m"; red_light="\e[1;31m"; green_light="\e[1;32m"; yellow_light="\e[1;33m"; blue_light="\e[1;34m"; magenta_light="\e[1;35m"; purple_light="\e[1;36m"; blank="\e[m";
	function todo_splt(){ n="$1";
		if [[ -n $1 ]]; then {
			sig=${n:0:3}; frog=$(echo ${n:4:3} | rev); time=${n:8:3}; comp=${n:12:5}; emoj=${n:18:1}; cap=${n:19:1}; acry=${n:20:1}; desc=${n:23};
			printf "$sig $green$acry$blank $frog $comp $time $emoj\\t$cap$desc\n";
		}; fi; }
	file="$FOCUS_PATH/task_focus.md";
	n0=$(grep -n 'â¿¶' $file | cut -d : -f1); n0=$[ n0 + 1 ];
	n1=$(grep -n 'â¿µ' $file | cut -d : -f1); n1=$[ n1 - 1 ];
	res=""; IFS=$'\n';read -rd '' -a y <<< "$(sed "$n0,$n1 p;d" $file)";
	for l in ${y[@]}; do { res="$res\n$(todo_splt $l)"; }; done
	printf "$res" | tail -n +2 | sort -r;
}; fi
# res=$( | gsed "s/\// \\$red||\\$blank /g" | gsed "s/^\(...\) \(...\) \(...\) \(.....\) \(.*\) \(\w\): / \1 \\$green\6\\$blank \3 \5\\t/")
# nf=$(printf "$res" | grep -m1 -n '\-\-\-\-\-' | gsed 's/:\-*$//');
# nf=$[ $nf - 2 ];

